package Project;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTabbedPane;
import java.awt.CardLayout;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import javax.swing.JTextArea;
import java.awt.Insets;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class WalletBuilderGUI extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					WalletBuilderGUI frame = new WalletBuilderGUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public WalletBuilderGUI() {
		setTitle("Testudo Bitcoin Wallet");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 676, 460);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new BorderLayout(0, 0));
		
		JTabbedPane tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		contentPane.add(tabbedPane);
		
		JPanel panel = new JPanel();
		tabbedPane.addTab("Key Generation", null, panel, null);
		GridBagLayout gbl_panel = new GridBagLayout();
		gbl_panel.columnWidths = new int[]{0, 0, 0, 0, 0, 293, 231, 0};
		gbl_panel.rowHeights = new int[]{0, 50, 0, 0, 0, 0, 38, 0, 0};
		gbl_panel.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, Double.MIN_VALUE};
		gbl_panel.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panel.setLayout(gbl_panel);
		
		JComboBox comboBox = new JComboBox();
		comboBox.addItem("Generate new private key");
		comboBox.addItem("Generate new public key");
		comboBox.addItem("View public keys");
		comboBox.addItem("View private keys");
		GridBagConstraints gbc_comboBox = new GridBagConstraints();
		gbc_comboBox.insets = new Insets(0, 0, 5, 5);
		gbc_comboBox.fill = GridBagConstraints.HORIZONTAL;
		gbc_comboBox.anchor = GridBagConstraints.SOUTH;
		gbc_comboBox.gridx = 5;
		gbc_comboBox.gridy = 1;
		panel.add(comboBox, gbc_comboBox);
		
		JTextArea textArea = new JTextArea();
		GridBagConstraints gbc_textArea = new GridBagConstraints();
		gbc_textArea.insets = new Insets(0, 0, 5, 5);
		gbc_textArea.fill = GridBagConstraints.BOTH;
		gbc_textArea.gridx = 5;
		gbc_textArea.gridy = 6;
		panel.add(textArea, gbc_textArea);
		
		JPanel panel_1 = new JPanel();
		tabbedPane.addTab("Signing transactions", null, panel_1, null);
		GridBagLayout gbl_panel_1 = new GridBagLayout();
		gbl_panel_1.columnWidths = new int[]{0, 0, 0, 0, 0, 92, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
		gbl_panel_1.rowHeights = new int[]{0, 0, 40, 0};
		gbl_panel_1.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_panel_1.rowWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
		panel_1.setLayout(gbl_panel_1);
		
		JButton btnSignTransaction = new JButton("Sign Transaction");
		GridBagConstraints gbc_btnSignTransaction = new GridBagConstraints();
		gbc_btnSignTransaction.insets = new Insets(0, 0, 0, 5);
		gbc_btnSignTransaction.gridx = 8;
		gbc_btnSignTransaction.gridy = 2;
		panel_1.add(btnSignTransaction, gbc_btnSignTransaction);
		
		JButton btnNewButton_1 = new JButton("Upload Transactions");
		GridBagConstraints gbc_btnNewButton_1 = new GridBagConstraints();
		gbc_btnNewButton_1.insets = new Insets(0, 0, 0, 5);
		gbc_btnNewButton_1.gridx = 10;
		gbc_btnNewButton_1.gridy = 2;
		panel_1.add(btnNewButton_1, gbc_btnNewButton_1);
		
		JButton btnExportTransaction = new JButton("Export Transaction");
		GridBagConstraints gbc_btnExportTransaction = new GridBagConstraints();
		gbc_btnExportTransaction.insets = new Insets(0, 0, 0, 5);
		gbc_btnExportTransaction.gridx = 12;
		gbc_btnExportTransaction.gridy = 2;
		panel_1.add(btnExportTransaction, gbc_btnExportTransaction);
		
		JPanel panel_2 = new JPanel();
		tabbedPane.addTab("Cold Storage", null, panel_2, null);
		GridBagLayout gbl_panel_2 = new GridBagLayout();
		gbl_panel_2.columnWidths = new int[]{0, 0, 0, 0, 0, 342, 0, 0, 0, 0, 0};
		gbl_panel_2.rowHeights = new int[]{0, 0, 0, 0, 0, 0, 0, 0};
		gbl_panel_2.columnWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_panel_2.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		panel_2.setLayout(gbl_panel_2);
		
		JButton btnGenerateKeys = new JButton("Generate Keys");
		GridBagConstraints gbc_btnGenerateKeys = new GridBagConstraints();
		gbc_btnGenerateKeys.insets = new Insets(0, 0, 5, 5);
		gbc_btnGenerateKeys.gridx = 5;
		gbc_btnGenerateKeys.gridy = 2;
		panel_2.add(btnGenerateKeys, gbc_btnGenerateKeys);
		
		JButton btnExport = new JButton("Export");
		GridBagConstraints gbc_btnExport = new GridBagConstraints();
		gbc_btnExport.insets = new Insets(0, 0, 5, 5);
		gbc_btnExport.gridx = 5;
		gbc_btnExport.gridy = 3;
		panel_2.add(btnExport, gbc_btnExport);
		
		JTextArea txtrAsdfadf = new JTextArea();
		txtrAsdfadf.setText("public: ");
		GridBagConstraints gbc_txtrAsdfadf = new GridBagConstraints();
		gbc_txtrAsdfadf.insets = new Insets(0, 0, 5, 5);
		gbc_txtrAsdfadf.fill = GridBagConstraints.BOTH;
		gbc_txtrAsdfadf.gridx = 5;
		gbc_txtrAsdfadf.gridy = 5;
		panel_2.add(txtrAsdfadf, gbc_txtrAsdfadf);
		
		JTextArea txtrPrivate = new JTextArea();
		txtrPrivate.setText("private:");
		GridBagConstraints gbc_txtrPrivate = new GridBagConstraints();
		gbc_txtrPrivate.insets = new Insets(0, 0, 0, 5);
		gbc_txtrPrivate.fill = GridBagConstraints.BOTH;
		gbc_txtrPrivate.gridx = 5;
		gbc_txtrPrivate.gridy = 6;
		panel_2.add(txtrPrivate, gbc_txtrPrivate);
	}

}
